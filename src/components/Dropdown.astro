---
interface Item {
  value: string;
  label: string;
}

const { items, name } = Astro.props as { items: Item[]; name: string };
---

<div>
  <button
    id={name + "-dropdown-button"}
    class="flex
    items-center
    justify-center
    px-3 py-2
    text-gray-500
    text-sm font-light rounded-md hover:text-white
    hover:bg-opacity-75 focus:outline-none"
  >
    <span>{name}</span>
    <svg
      id={name + "-dropdown-icon"}
      class="size-3 transition-transform transform"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>
  <ul
    id={name + "-dropdown-menu"}
    class="absolute mt-2 hidden bg-opacity-60 backdrop-blur-md rounded-md shadow-lg z-10"
  >
    {
      items.map((item) => (
        <li>
          <button
            class="w-full text-left px-4 py-2 text-sm text-gray-400 hover:text-white"
            data-tech={item.value}
            id={name + "-" + item.value}
          >
            {item.label}
          </button>
        </li>
      ))
    }
  </ul>
</div>
